1. 0:00~05:17 내용 날아감.

  1) How to use props in React_데이터 처리
    - ㅇ
    
    - ExpenseItem을 외부로부터 설정할 수 있도록 할땐
    - 데이터를 해당 컴포넌트 내부에 저장하면 안되고 밖에서 받아야 함
    - 이런 작업은 props 개념으로 동작함
    
    - 컴포넌트에 속성을 줄 수 있음
      (1)✨ {}, 중괄호 구문을 사용하여 속성값을 할당할 수 있음 ✨
      예시)
        const expenses = [{id: 'e1', title: 'Toilet Paper', amount: 94.12, date: new Date(2020, 7, 14)},{...}];
        <ExpenseItem title={expenses[0].title} ></ExpenseItem>
        // 위와 같은 방식으로 {}.title을 속성으로 줄 수 있음
        // 이를 통해 배열 expenses에 접근하고
        // 첫 번째 목록인 인덱스[0]에 접근하여
        // .title로 expenses 배열의 첫 번째 목록의 title값을 ExpenseItem에 전달함
        //✨ 이 때, . 뒤에 나오는 부분은 위의 프로퍼티 이름과 일치해야함!! ✨
    
  2) How to use props in React_데이터 출력
    -✨ 사용자 정의 컴포넌트에 정의했던 값들에 매개변수를 통해 접근함! ✨
    - 하나의 매개변수를 통해 함수에 데이터를 접근시키는데,
    -✨ 리액트는 우리가 사용하는 모든 컴포넌트에서 한 개의 매개변수만을 사용함 ✨
    -✨ 그리고 그 매개변수는 property로서 모든 속성을 받는 객체가 됨 ✨
    - 그래서 전체적인 개념에 대해 props라는 이름이 붙었고
    -✨ 따라서 하나의 매개변수를 얻고, 사용자가 원하는대로 매개변수의 이름을 지정할 수 있음 ✨
    -  보통은 props라고 이름붙이긴 함(명확하게 하기 위해)
    
    예시)
      function ExpenseItem(title, amount, data) {
        (...)
      }
      // 풀어쓰면 위와 같은 뜻이 되겠지만, React에서 매개변수를 통해 함수에 데이터를 접근시키는 방법은
      
      function ExpenseItem(props) {
        (...)
      }
      
    -✨ props는 사용자 지정요소에서 우리가 얻는 속성에 대한 모든 값을 갖고있는 객체임 ✨
    -✨ props객체에서 key와 value로 이루어진 파일 포맷을 얻는데 ✨
    - 그 파일 포맷은 리액트에 의해 자동으로 전달됨
    - 위 예시에서 key = 정의된 속성이름 = title, amount, data를 의미
    - 위 예시에서 value = 여기서 설정된 값 = title, amount, data의 각각의 값들을 의미
    
    예시)
    - 따라서, 만약 title 값에 접근하고 싶다면
      
      function ExpenseItem(props) {
        <h2>{props.title}</h2>
      }
      // 위와 같이 사용하면 되는데,
      
    - 매개변수(props)에 접근하고 >
    - title 프로퍼티로 이동 >
    - App.js의 ExpenseItem 컴포넌트 안에 title 속성이 통해 존재하니까 props로 받아오기 가능! >
    
    (1)✨ props객체에서 접근하는 키는 사용자가 선택한 속성 이름이어야 한다. ✨
      예시)
        <ExpenseItem
          title={expenses[0].title}
          amount={expenses[0].amount}
          date={expenses[0].date}>
        </ExpenseItem>
        // 위 내용을 props로 끌고와놓고
        
        function ExpenseItem(props) {
          <h2>{props.name}</h2>
        }
        // 이렇게 props.속성을 받으면 오류가 난다는 소리임 !
        
2. props가 중요한 이유
  -✨ 재사용 가능한 컴포넌트를 만들게 해줌! ✨
  -✨ 다른 컴포넌트에서 다른 컴포넌트로 데이터를 전달할 수 있게 해줌! ✨
  
